// Copyright 2013 The Flutter Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Autogenerated from Pigeon, do not edit directly.
// See also: https://pub.dev/packages/pigeon

#ifndef PIGEON_CORE_TESTS_GEN_H_
#define PIGEON_CORE_TESTS_GEN_H_

#include <flutter_linux/flutter_linux.h>

G_BEGIN_DECLS

typedef enum {
  MY_AN_ENUM_ONE = 0,
  MY_AN_ENUM_TWO = 1,
  MY_AN_ENUM_THREE = 2,
  MY_AN_ENUM_FORTY_TWO = 3,
  MY_AN_ENUM_FOUR_HUNDRED_TWENTY_TWO = 4
} MyAnEnum;

// A class containing all supported types.
G_DECLARE_FINAL_TYPE(MyAllTypes, my_all_types, MY, ALL_TYPES, GObject)

MyAllTypes* my_all_types_new(gboolean a_bool, int64_t an_int, int64_t an_int64,
                             double a_double, const uint8_t* a_byte_array,
                             const int32_t* a4_byte_array,
                             const int64_t* a8_byte_array,
                             const double* a_float_array, FlValue* a_list,
                             FlValue* a_map, MyAnEnum an_enum,
                             const gchar* a_string, FlValue* an_object);

gboolean my_all_types_get_a_bool(MyAllTypes* object);

int64_t my_all_types_get_an_int(MyAllTypes* object);

int64_t my_all_types_get_an_int64(MyAllTypes* object);

double my_all_types_get_a_double(MyAllTypes* object);

const uint8_t* my_all_types_get_a_byte_array(MyAllTypes* object);

const int32_t* my_all_types_get_a4_byte_array(MyAllTypes* object);

const int64_t* my_all_types_get_a8_byte_array(MyAllTypes* object);

const double* my_all_types_get_a_float_array(MyAllTypes* object);

FlValue* my_all_types_get_a_list(MyAllTypes* object);

FlValue* my_all_types_get_a_map(MyAllTypes* object);

MyAnEnum my_all_types_get_an_enum(MyAllTypes* object);

const gchar* my_all_types_get_a_string(MyAllTypes* object);

FlValue* my_all_types_get_an_object(MyAllTypes* object);

// A class containing all supported nullable types.
G_DECLARE_FINAL_TYPE(MyAllNullableTypes, my_all_nullable_types, MY,
                     ALL_NULLABLE_TYPES, GObject)

MyAllNullableTypes* my_all_nullable_types_new(
    gboolean a_nullable_bool, int64_t a_nullable_int, int64_t a_nullable_int64,
    double a_nullable_double, const uint8_t* a_nullable_byte_array,
    const int32_t* a_nullable4_byte_array,
    const int64_t* a_nullable8_byte_array, const double* a_nullable_float_array,
    FlValue* a_nullable_list, FlValue* a_nullable_map,
    FlValue* nullable_nested_list, FlValue* nullable_map_with_annotations,
    FlValue* nullable_map_with_object, MyAnEnum a_nullable_enum,
    const gchar* a_nullable_string, FlValue* a_nullable_object);

gboolean my_all_nullable_types_get_a_nullable_bool(MyAllNullableTypes* object);

int64_t my_all_nullable_types_get_a_nullable_int(MyAllNullableTypes* object);

int64_t my_all_nullable_types_get_a_nullable_int64(MyAllNullableTypes* object);

double my_all_nullable_types_get_a_nullable_double(MyAllNullableTypes* object);

const uint8_t* my_all_nullable_types_get_a_nullable_byte_array(
    MyAllNullableTypes* object);

const int32_t* my_all_nullable_types_get_a_nullable4_byte_array(
    MyAllNullableTypes* object);

const int64_t* my_all_nullable_types_get_a_nullable8_byte_array(
    MyAllNullableTypes* object);

const double* my_all_nullable_types_get_a_nullable_float_array(
    MyAllNullableTypes* object);

FlValue* my_all_nullable_types_get_a_nullable_list(MyAllNullableTypes* object);

FlValue* my_all_nullable_types_get_a_nullable_map(MyAllNullableTypes* object);

FlValue* my_all_nullable_types_get_nullable_nested_list(
    MyAllNullableTypes* object);

FlValue* my_all_nullable_types_get_nullable_map_with_annotations(
    MyAllNullableTypes* object);

FlValue* my_all_nullable_types_get_nullable_map_with_object(
    MyAllNullableTypes* object);

MyAnEnum my_all_nullable_types_get_a_nullable_enum(MyAllNullableTypes* object);

const gchar* my_all_nullable_types_get_a_nullable_string(
    MyAllNullableTypes* object);

FlValue* my_all_nullable_types_get_a_nullable_object(
    MyAllNullableTypes* object);

// A class for testing nested class handling.
//
// This is needed to test nested nullable and non-nullable classes,
// `AllNullableTypes` is non-nullable here as it is easier to instantiate
// than `AllTypes` when testing doesn't require both (ie. testing null classes).
G_DECLARE_FINAL_TYPE(MyAllClassesWrapper, my_all_classes_wrapper, MY,
                     ALL_CLASSES_WRAPPER, GObject)

MyAllClassesWrapper* my_all_classes_wrapper_new(
    MyAllNullableTypes* all_nullable_types, MyAllTypes* all_types);

MyAllNullableTypes* my_all_classes_wrapper_get_all_nullable_types(
    MyAllClassesWrapper* object);

MyAllTypes* my_all_classes_wrapper_get_all_types(MyAllClassesWrapper* object);

// A data class containing a List, used in unit tests.
G_DECLARE_FINAL_TYPE(MyTestMessage, my_test_message, MY, TEST_MESSAGE, GObject)

MyTestMessage* my_test_message_new(FlValue* test_list);

FlValue* my_test_message_get_test_list(MyTestMessage* object);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiNoopResponse,
                     my_host_integration_core_api_noop_response, MY,
                     HOST_INTEGRATION_CORE_API_NOOP_RESPONSE, GObject)

MyHostIntegrationCoreApiNoopResponse*
my_host_integration_core_api_noop_response_new(void return_value);

MyHostIntegrationCoreApiNoopResponse*
my_host_integration_core_api_noop_response_new_error(const gchar* code,
                                                     const gchar* message,
                                                     FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiEchoAllTypesResponse,
                     my_host_integration_core_api_echo_all_types_response, MY,
                     HOST_INTEGRATION_CORE_API_ECHO_ALL_TYPES_RESPONSE, GObject)

MyHostIntegrationCoreApiEchoAllTypesResponse*
my_host_integration_core_api_echo_all_types_response_new(
    MyAllTypes* return_value);

MyHostIntegrationCoreApiEchoAllTypesResponse*
my_host_integration_core_api_echo_all_types_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiThrowErrorResponse,
                     my_host_integration_core_api_throw_error_response, MY,
                     HOST_INTEGRATION_CORE_API_THROW_ERROR_RESPONSE, GObject)

MyHostIntegrationCoreApiThrowErrorResponse*
my_host_integration_core_api_throw_error_response_new(FlValue* return_value);

MyHostIntegrationCoreApiThrowErrorResponse*
my_host_integration_core_api_throw_error_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(
    MyHostIntegrationCoreApiThrowErrorFromVoidResponse,
    my_host_integration_core_api_throw_error_from_void_response, MY,
    HOST_INTEGRATION_CORE_API_THROW_ERROR_FROM_VOID_RESPONSE, GObject)

MyHostIntegrationCoreApiThrowErrorFromVoidResponse*
my_host_integration_core_api_throw_error_from_void_response_new(
    void return_value);

MyHostIntegrationCoreApiThrowErrorFromVoidResponse*
my_host_integration_core_api_throw_error_from_void_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiThrowFlutterErrorResponse,
                     my_host_integration_core_api_throw_flutter_error_response,
                     MY, HOST_INTEGRATION_CORE_API_THROW_FLUTTER_ERROR_RESPONSE,
                     GObject)

MyHostIntegrationCoreApiThrowFlutterErrorResponse*
my_host_integration_core_api_throw_flutter_error_response_new(
    FlValue* return_value);

MyHostIntegrationCoreApiThrowFlutterErrorResponse*
my_host_integration_core_api_throw_flutter_error_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiEchoIntResponse,
                     my_host_integration_core_api_echo_int_response, MY,
                     HOST_INTEGRATION_CORE_API_ECHO_INT_RESPONSE, GObject)

MyHostIntegrationCoreApiEchoIntResponse*
my_host_integration_core_api_echo_int_response_new(int64_t return_value);

MyHostIntegrationCoreApiEchoIntResponse*
my_host_integration_core_api_echo_int_response_new_error(const gchar* code,
                                                         const gchar* message,
                                                         FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiEchoDoubleResponse,
                     my_host_integration_core_api_echo_double_response, MY,
                     HOST_INTEGRATION_CORE_API_ECHO_DOUBLE_RESPONSE, GObject)

MyHostIntegrationCoreApiEchoDoubleResponse*
my_host_integration_core_api_echo_double_response_new(double return_value);

MyHostIntegrationCoreApiEchoDoubleResponse*
my_host_integration_core_api_echo_double_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiEchoBoolResponse,
                     my_host_integration_core_api_echo_bool_response, MY,
                     HOST_INTEGRATION_CORE_API_ECHO_BOOL_RESPONSE, GObject)

MyHostIntegrationCoreApiEchoBoolResponse*
my_host_integration_core_api_echo_bool_response_new(gboolean return_value);

MyHostIntegrationCoreApiEchoBoolResponse*
my_host_integration_core_api_echo_bool_response_new_error(const gchar* code,
                                                          const gchar* message,
                                                          FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiEchoStringResponse,
                     my_host_integration_core_api_echo_string_response, MY,
                     HOST_INTEGRATION_CORE_API_ECHO_STRING_RESPONSE, GObject)

MyHostIntegrationCoreApiEchoStringResponse*
my_host_integration_core_api_echo_string_response_new(
    const gchar* return_value);

MyHostIntegrationCoreApiEchoStringResponse*
my_host_integration_core_api_echo_string_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiEchoUint8ListResponse,
                     my_host_integration_core_api_echo_uint8_list_response, MY,
                     HOST_INTEGRATION_CORE_API_ECHO_UINT8_LIST_RESPONSE,
                     GObject)

MyHostIntegrationCoreApiEchoUint8ListResponse*
my_host_integration_core_api_echo_uint8_list_response_new(
    const uint8_t* return_value);

MyHostIntegrationCoreApiEchoUint8ListResponse*
my_host_integration_core_api_echo_uint8_list_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiEchoObjectResponse,
                     my_host_integration_core_api_echo_object_response, MY,
                     HOST_INTEGRATION_CORE_API_ECHO_OBJECT_RESPONSE, GObject)

MyHostIntegrationCoreApiEchoObjectResponse*
my_host_integration_core_api_echo_object_response_new(FlValue* return_value);

MyHostIntegrationCoreApiEchoObjectResponse*
my_host_integration_core_api_echo_object_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiEchoListResponse,
                     my_host_integration_core_api_echo_list_response, MY,
                     HOST_INTEGRATION_CORE_API_ECHO_LIST_RESPONSE, GObject)

MyHostIntegrationCoreApiEchoListResponse*
my_host_integration_core_api_echo_list_response_new(FlValue* return_value);

MyHostIntegrationCoreApiEchoListResponse*
my_host_integration_core_api_echo_list_response_new_error(const gchar* code,
                                                          const gchar* message,
                                                          FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiEchoMapResponse,
                     my_host_integration_core_api_echo_map_response, MY,
                     HOST_INTEGRATION_CORE_API_ECHO_MAP_RESPONSE, GObject)

MyHostIntegrationCoreApiEchoMapResponse*
my_host_integration_core_api_echo_map_response_new(FlValue* return_value);

MyHostIntegrationCoreApiEchoMapResponse*
my_host_integration_core_api_echo_map_response_new_error(const gchar* code,
                                                         const gchar* message,
                                                         FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiEchoClassWrapperResponse,
                     my_host_integration_core_api_echo_class_wrapper_response,
                     MY, HOST_INTEGRATION_CORE_API_ECHO_CLASS_WRAPPER_RESPONSE,
                     GObject)

MyHostIntegrationCoreApiEchoClassWrapperResponse*
my_host_integration_core_api_echo_class_wrapper_response_new(
    MyAllClassesWrapper* return_value);

MyHostIntegrationCoreApiEchoClassWrapperResponse*
my_host_integration_core_api_echo_class_wrapper_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiEchoEnumResponse,
                     my_host_integration_core_api_echo_enum_response, MY,
                     HOST_INTEGRATION_CORE_API_ECHO_ENUM_RESPONSE, GObject)

MyHostIntegrationCoreApiEchoEnumResponse*
my_host_integration_core_api_echo_enum_response_new(MyAnEnum return_value);

MyHostIntegrationCoreApiEchoEnumResponse*
my_host_integration_core_api_echo_enum_response_new_error(const gchar* code,
                                                          const gchar* message,
                                                          FlValue* details);

G_DECLARE_FINAL_TYPE(
    MyHostIntegrationCoreApiEchoNamedDefaultStringResponse,
    my_host_integration_core_api_echo_named_default_string_response, MY,
    HOST_INTEGRATION_CORE_API_ECHO_NAMED_DEFAULT_STRING_RESPONSE, GObject)

MyHostIntegrationCoreApiEchoNamedDefaultStringResponse*
my_host_integration_core_api_echo_named_default_string_response_new(
    const gchar* return_value);

MyHostIntegrationCoreApiEchoNamedDefaultStringResponse*
my_host_integration_core_api_echo_named_default_string_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(
    MyHostIntegrationCoreApiEchoOptionalDefaultDoubleResponse,
    my_host_integration_core_api_echo_optional_default_double_response, MY,
    HOST_INTEGRATION_CORE_API_ECHO_OPTIONAL_DEFAULT_DOUBLE_RESPONSE, GObject)

MyHostIntegrationCoreApiEchoOptionalDefaultDoubleResponse*
my_host_integration_core_api_echo_optional_default_double_response_new(
    double return_value);

MyHostIntegrationCoreApiEchoOptionalDefaultDoubleResponse*
my_host_integration_core_api_echo_optional_default_double_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiEchoRequiredIntResponse,
                     my_host_integration_core_api_echo_required_int_response,
                     MY, HOST_INTEGRATION_CORE_API_ECHO_REQUIRED_INT_RESPONSE,
                     GObject)

MyHostIntegrationCoreApiEchoRequiredIntResponse*
my_host_integration_core_api_echo_required_int_response_new(
    int64_t return_value);

MyHostIntegrationCoreApiEchoRequiredIntResponse*
my_host_integration_core_api_echo_required_int_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(
    MyHostIntegrationCoreApiEchoAllNullableTypesResponse,
    my_host_integration_core_api_echo_all_nullable_types_response, MY,
    HOST_INTEGRATION_CORE_API_ECHO_ALL_NULLABLE_TYPES_RESPONSE, GObject)

MyHostIntegrationCoreApiEchoAllNullableTypesResponse*
my_host_integration_core_api_echo_all_nullable_types_response_new(
    MyAllNullableTypes* return_value);

MyHostIntegrationCoreApiEchoAllNullableTypesResponse*
my_host_integration_core_api_echo_all_nullable_types_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(
    MyHostIntegrationCoreApiExtractNestedNullableStringResponse,
    my_host_integration_core_api_extract_nested_nullable_string_response, MY,
    HOST_INTEGRATION_CORE_API_EXTRACT_NESTED_NULLABLE_STRING_RESPONSE, GObject)

MyHostIntegrationCoreApiExtractNestedNullableStringResponse*
my_host_integration_core_api_extract_nested_nullable_string_response_new(
    const gchar* return_value);

MyHostIntegrationCoreApiExtractNestedNullableStringResponse*
my_host_integration_core_api_extract_nested_nullable_string_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(
    MyHostIntegrationCoreApiCreateNestedNullableStringResponse,
    my_host_integration_core_api_create_nested_nullable_string_response, MY,
    HOST_INTEGRATION_CORE_API_CREATE_NESTED_NULLABLE_STRING_RESPONSE, GObject)

MyHostIntegrationCoreApiCreateNestedNullableStringResponse*
my_host_integration_core_api_create_nested_nullable_string_response_new(
    MyAllClassesWrapper* return_value);

MyHostIntegrationCoreApiCreateNestedNullableStringResponse*
my_host_integration_core_api_create_nested_nullable_string_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(
    MyHostIntegrationCoreApiSendMultipleNullableTypesResponse,
    my_host_integration_core_api_send_multiple_nullable_types_response, MY,
    HOST_INTEGRATION_CORE_API_SEND_MULTIPLE_NULLABLE_TYPES_RESPONSE, GObject)

MyHostIntegrationCoreApiSendMultipleNullableTypesResponse*
my_host_integration_core_api_send_multiple_nullable_types_response_new(
    MyAllNullableTypes* return_value);

MyHostIntegrationCoreApiSendMultipleNullableTypesResponse*
my_host_integration_core_api_send_multiple_nullable_types_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiEchoNullableIntResponse,
                     my_host_integration_core_api_echo_nullable_int_response,
                     MY, HOST_INTEGRATION_CORE_API_ECHO_NULLABLE_INT_RESPONSE,
                     GObject)

MyHostIntegrationCoreApiEchoNullableIntResponse*
my_host_integration_core_api_echo_nullable_int_response_new(
    int64_t return_value);

MyHostIntegrationCoreApiEchoNullableIntResponse*
my_host_integration_core_api_echo_nullable_int_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiEchoNullableDoubleResponse,
                     my_host_integration_core_api_echo_nullable_double_response,
                     MY,
                     HOST_INTEGRATION_CORE_API_ECHO_NULLABLE_DOUBLE_RESPONSE,
                     GObject)

MyHostIntegrationCoreApiEchoNullableDoubleResponse*
my_host_integration_core_api_echo_nullable_double_response_new(
    double return_value);

MyHostIntegrationCoreApiEchoNullableDoubleResponse*
my_host_integration_core_api_echo_nullable_double_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiEchoNullableBoolResponse,
                     my_host_integration_core_api_echo_nullable_bool_response,
                     MY, HOST_INTEGRATION_CORE_API_ECHO_NULLABLE_BOOL_RESPONSE,
                     GObject)

MyHostIntegrationCoreApiEchoNullableBoolResponse*
my_host_integration_core_api_echo_nullable_bool_response_new(
    gboolean return_value);

MyHostIntegrationCoreApiEchoNullableBoolResponse*
my_host_integration_core_api_echo_nullable_bool_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiEchoNullableStringResponse,
                     my_host_integration_core_api_echo_nullable_string_response,
                     MY,
                     HOST_INTEGRATION_CORE_API_ECHO_NULLABLE_STRING_RESPONSE,
                     GObject)

MyHostIntegrationCoreApiEchoNullableStringResponse*
my_host_integration_core_api_echo_nullable_string_response_new(
    const gchar* return_value);

MyHostIntegrationCoreApiEchoNullableStringResponse*
my_host_integration_core_api_echo_nullable_string_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(
    MyHostIntegrationCoreApiEchoNullableUint8ListResponse,
    my_host_integration_core_api_echo_nullable_uint8_list_response, MY,
    HOST_INTEGRATION_CORE_API_ECHO_NULLABLE_UINT8_LIST_RESPONSE, GObject)

MyHostIntegrationCoreApiEchoNullableUint8ListResponse*
my_host_integration_core_api_echo_nullable_uint8_list_response_new(
    const uint8_t* return_value);

MyHostIntegrationCoreApiEchoNullableUint8ListResponse*
my_host_integration_core_api_echo_nullable_uint8_list_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiEchoNullableObjectResponse,
                     my_host_integration_core_api_echo_nullable_object_response,
                     MY,
                     HOST_INTEGRATION_CORE_API_ECHO_NULLABLE_OBJECT_RESPONSE,
                     GObject)

MyHostIntegrationCoreApiEchoNullableObjectResponse*
my_host_integration_core_api_echo_nullable_object_response_new(
    FlValue* return_value);

MyHostIntegrationCoreApiEchoNullableObjectResponse*
my_host_integration_core_api_echo_nullable_object_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiEchoNullableListResponse,
                     my_host_integration_core_api_echo_nullable_list_response,
                     MY, HOST_INTEGRATION_CORE_API_ECHO_NULLABLE_LIST_RESPONSE,
                     GObject)

MyHostIntegrationCoreApiEchoNullableListResponse*
my_host_integration_core_api_echo_nullable_list_response_new(
    FlValue* return_value);

MyHostIntegrationCoreApiEchoNullableListResponse*
my_host_integration_core_api_echo_nullable_list_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiEchoNullableMapResponse,
                     my_host_integration_core_api_echo_nullable_map_response,
                     MY, HOST_INTEGRATION_CORE_API_ECHO_NULLABLE_MAP_RESPONSE,
                     GObject)

MyHostIntegrationCoreApiEchoNullableMapResponse*
my_host_integration_core_api_echo_nullable_map_response_new(
    FlValue* return_value);

MyHostIntegrationCoreApiEchoNullableMapResponse*
my_host_integration_core_api_echo_nullable_map_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApiEchoNullableEnumResponse,
                     my_host_integration_core_api_echo_nullable_enum_response,
                     MY, HOST_INTEGRATION_CORE_API_ECHO_NULLABLE_ENUM_RESPONSE,
                     GObject)

MyHostIntegrationCoreApiEchoNullableEnumResponse*
my_host_integration_core_api_echo_nullable_enum_response_new(
    MyAnEnum return_value);

MyHostIntegrationCoreApiEchoNullableEnumResponse*
my_host_integration_core_api_echo_nullable_enum_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(
    MyHostIntegrationCoreApiEchoOptionalNullableIntResponse,
    my_host_integration_core_api_echo_optional_nullable_int_response, MY,
    HOST_INTEGRATION_CORE_API_ECHO_OPTIONAL_NULLABLE_INT_RESPONSE, GObject)

MyHostIntegrationCoreApiEchoOptionalNullableIntResponse*
my_host_integration_core_api_echo_optional_nullable_int_response_new(
    int64_t return_value);

MyHostIntegrationCoreApiEchoOptionalNullableIntResponse*
my_host_integration_core_api_echo_optional_nullable_int_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(
    MyHostIntegrationCoreApiEchoNamedNullableStringResponse,
    my_host_integration_core_api_echo_named_nullable_string_response, MY,
    HOST_INTEGRATION_CORE_API_ECHO_NAMED_NULLABLE_STRING_RESPONSE, GObject)

MyHostIntegrationCoreApiEchoNamedNullableStringResponse*
my_host_integration_core_api_echo_named_nullable_string_response_new(
    const gchar* return_value);

MyHostIntegrationCoreApiEchoNamedNullableStringResponse*
my_host_integration_core_api_echo_named_nullable_string_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostIntegrationCoreApi, my_host_integration_core_api, MY,
                     HOST_INTEGRATION_CORE_API, GObject)

typedef struct {
  MyHostIntegrationCoreApiNoopResponse* (*noop)(
      MyHostIntegrationCoreApi* object, gpointer user_data);
  MyHostIntegrationCoreApiEchoAllTypesResponse* (*echo_all_types)(
      MyHostIntegrationCoreApi* object, MyAllTypes* everything,
      gpointer user_data);
  MyHostIntegrationCoreApiThrowErrorResponse* (*throw_error)(
      MyHostIntegrationCoreApi* object, gpointer user_data);
  MyHostIntegrationCoreApiThrowErrorFromVoidResponse* (*throw_error_from_void)(
      MyHostIntegrationCoreApi* object, gpointer user_data);
  MyHostIntegrationCoreApiThrowFlutterErrorResponse* (*throw_flutter_error)(
      MyHostIntegrationCoreApi* object, gpointer user_data);
  MyHostIntegrationCoreApiEchoIntResponse* (*echo_int)(
      MyHostIntegrationCoreApi* object, int64_t an_int, gpointer user_data);
  MyHostIntegrationCoreApiEchoDoubleResponse* (*echo_double)(
      MyHostIntegrationCoreApi* object, double a_double, gpointer user_data);
  MyHostIntegrationCoreApiEchoBoolResponse* (*echo_bool)(
      MyHostIntegrationCoreApi* object, gboolean a_bool, gpointer user_data);
  MyHostIntegrationCoreApiEchoStringResponse* (*echo_string)(
      MyHostIntegrationCoreApi* object, const gchar* a_string,
      gpointer user_data);
  MyHostIntegrationCoreApiEchoUint8ListResponse* (*echo_uint8_list)(
      MyHostIntegrationCoreApi* object, const uint8_t* a_uint8_list,
      gpointer user_data);
  MyHostIntegrationCoreApiEchoObjectResponse* (*echo_object)(
      MyHostIntegrationCoreApi* object, FlValue* an_object, gpointer user_data);
  MyHostIntegrationCoreApiEchoListResponse* (*echo_list)(
      MyHostIntegrationCoreApi* object, FlValue* a_list, gpointer user_data);
  MyHostIntegrationCoreApiEchoMapResponse* (*echo_map)(
      MyHostIntegrationCoreApi* object, FlValue* a_map, gpointer user_data);
  MyHostIntegrationCoreApiEchoClassWrapperResponse* (*echo_class_wrapper)(
      MyHostIntegrationCoreApi* object, MyAllClassesWrapper* wrapper,
      gpointer user_data);
  MyHostIntegrationCoreApiEchoEnumResponse* (*echo_enum)(
      MyHostIntegrationCoreApi* object, MyAnEnum an_enum, gpointer user_data);
  MyHostIntegrationCoreApiEchoNamedDefaultStringResponse* (
      *echo_named_default_string)(MyHostIntegrationCoreApi* object,
                                  const gchar* a_string, gpointer user_data);
  MyHostIntegrationCoreApiEchoOptionalDefaultDoubleResponse* (
      *echo_optional_default_double)(MyHostIntegrationCoreApi* object,
                                     double a_double, gpointer user_data);
  MyHostIntegrationCoreApiEchoRequiredIntResponse* (*echo_required_int)(
      MyHostIntegrationCoreApi* object, int64_t an_int, gpointer user_data);
  MyHostIntegrationCoreApiEchoAllNullableTypesResponse* (
      *echo_all_nullable_types)(MyHostIntegrationCoreApi* object,
                                MyAllNullableTypes* everything,
                                gpointer user_data);
  MyHostIntegrationCoreApiExtractNestedNullableStringResponse* (
      *extract_nested_nullable_string)(MyHostIntegrationCoreApi* object,
                                       MyAllClassesWrapper* wrapper,
                                       gpointer user_data);
  MyHostIntegrationCoreApiCreateNestedNullableStringResponse* (
      *create_nested_nullable_string)(MyHostIntegrationCoreApi* object,
                                      const gchar* nullable_string,
                                      gpointer user_data);
  MyHostIntegrationCoreApiSendMultipleNullableTypesResponse* (
      *send_multiple_nullable_types)(MyHostIntegrationCoreApi* object,
                                     gboolean a_nullable_bool,
                                     int64_t a_nullable_int,
                                     const gchar* a_nullable_string,
                                     gpointer user_data);
  MyHostIntegrationCoreApiEchoNullableIntResponse* (*echo_nullable_int)(
      MyHostIntegrationCoreApi* object, int64_t a_nullable_int,
      gpointer user_data);
  MyHostIntegrationCoreApiEchoNullableDoubleResponse* (*echo_nullable_double)(
      MyHostIntegrationCoreApi* object, double a_nullable_double,
      gpointer user_data);
  MyHostIntegrationCoreApiEchoNullableBoolResponse* (*echo_nullable_bool)(
      MyHostIntegrationCoreApi* object, gboolean a_nullable_bool,
      gpointer user_data);
  MyHostIntegrationCoreApiEchoNullableStringResponse* (*echo_nullable_string)(
      MyHostIntegrationCoreApi* object, const gchar* a_nullable_string,
      gpointer user_data);
  MyHostIntegrationCoreApiEchoNullableUint8ListResponse* (
      *echo_nullable_uint8_list)(MyHostIntegrationCoreApi* object,
                                 const uint8_t* a_nullable_uint8_list,
                                 gpointer user_data);
  MyHostIntegrationCoreApiEchoNullableObjectResponse* (*echo_nullable_object)(
      MyHostIntegrationCoreApi* object, FlValue* a_nullable_object,
      gpointer user_data);
  MyHostIntegrationCoreApiEchoNullableListResponse* (*echo_nullable_list)(
      MyHostIntegrationCoreApi* object, FlValue* a_nullable_list,
      gpointer user_data);
  MyHostIntegrationCoreApiEchoNullableMapResponse* (*echo_nullable_map)(
      MyHostIntegrationCoreApi* object, FlValue* a_nullable_map,
      gpointer user_data);
  MyHostIntegrationCoreApiEchoNullableEnumResponse* (*echo_nullable_enum)(
      MyHostIntegrationCoreApi* object, MyAnEnum an_enum, gpointer user_data);
  MyHostIntegrationCoreApiEchoOptionalNullableIntResponse* (
      *echo_optional_nullable_int)(MyHostIntegrationCoreApi* object,
                                   int64_t a_nullable_int, gpointer user_data);
  MyHostIntegrationCoreApiEchoNamedNullableStringResponse* (
      *echo_named_nullable_string)(MyHostIntegrationCoreApi* object,
                                   const gchar* a_nullable_string,
                                   gpointer user_data);
  void (*noop_async)(MyHostIntegrationCoreApi* object,
                     FlBasicMessageChannelResponseHandle* response_handle,
                     gpointer user_data);
  void (*echo_async_int)(MyHostIntegrationCoreApi* object, int64_t an_int,
                         FlBasicMessageChannelResponseHandle* response_handle,
                         gpointer user_data);
  void (*echo_async_double)(
      MyHostIntegrationCoreApi* object, double a_double,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*echo_async_bool)(MyHostIntegrationCoreApi* object, gboolean a_bool,
                          FlBasicMessageChannelResponseHandle* response_handle,
                          gpointer user_data);
  void (*echo_async_string)(
      MyHostIntegrationCoreApi* object, const gchar* a_string,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*echo_async_uint8_list)(
      MyHostIntegrationCoreApi* object, const uint8_t* a_uint8_list,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*echo_async_object)(
      MyHostIntegrationCoreApi* object, FlValue* an_object,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*echo_async_list)(MyHostIntegrationCoreApi* object, FlValue* a_list,
                          FlBasicMessageChannelResponseHandle* response_handle,
                          gpointer user_data);
  void (*echo_async_map)(MyHostIntegrationCoreApi* object, FlValue* a_map,
                         FlBasicMessageChannelResponseHandle* response_handle,
                         gpointer user_data);
  void (*echo_async_enum)(MyHostIntegrationCoreApi* object, MyAnEnum an_enum,
                          FlBasicMessageChannelResponseHandle* response_handle,
                          gpointer user_data);
  void (*throw_async_error)(
      MyHostIntegrationCoreApi* object,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*throw_async_error_from_void)(
      MyHostIntegrationCoreApi* object,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*throw_async_flutter_error)(
      MyHostIntegrationCoreApi* object,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*echo_async_all_types)(
      MyHostIntegrationCoreApi* object, MyAllTypes* everything,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*echo_async_nullable_all_nullable_types)(
      MyHostIntegrationCoreApi* object, MyAllNullableTypes* everything,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*echo_async_nullable_int)(
      MyHostIntegrationCoreApi* object, int64_t an_int,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*echo_async_nullable_double)(
      MyHostIntegrationCoreApi* object, double a_double,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*echo_async_nullable_bool)(
      MyHostIntegrationCoreApi* object, gboolean a_bool,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*echo_async_nullable_string)(
      MyHostIntegrationCoreApi* object, const gchar* a_string,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*echo_async_nullable_uint8_list)(
      MyHostIntegrationCoreApi* object, const uint8_t* a_uint8_list,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*echo_async_nullable_object)(
      MyHostIntegrationCoreApi* object, FlValue* an_object,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*echo_async_nullable_list)(
      MyHostIntegrationCoreApi* object, FlValue* a_list,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*echo_async_nullable_map)(
      MyHostIntegrationCoreApi* object, FlValue* a_map,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*echo_async_nullable_enum)(
      MyHostIntegrationCoreApi* object, MyAnEnum an_enum,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_noop)(
      MyHostIntegrationCoreApi* object,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_throw_error)(
      MyHostIntegrationCoreApi* object,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_throw_error_from_void)(
      MyHostIntegrationCoreApi* object,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_echo_all_types)(
      MyHostIntegrationCoreApi* object, MyAllTypes* everything,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_echo_all_nullable_types)(
      MyHostIntegrationCoreApi* object, MyAllNullableTypes* everything,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_send_multiple_nullable_types)(
      MyHostIntegrationCoreApi* object, gboolean a_nullable_bool,
      int64_t a_nullable_int, const gchar* a_nullable_string,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_echo_bool)(
      MyHostIntegrationCoreApi* object, gboolean a_bool,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_echo_int)(
      MyHostIntegrationCoreApi* object, int64_t an_int,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_echo_double)(
      MyHostIntegrationCoreApi* object, double a_double,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_echo_string)(
      MyHostIntegrationCoreApi* object, const gchar* a_string,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_echo_uint8_list)(
      MyHostIntegrationCoreApi* object, const uint8_t* a_list,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_echo_list)(
      MyHostIntegrationCoreApi* object, FlValue* a_list,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_echo_map)(
      MyHostIntegrationCoreApi* object, FlValue* a_map,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_echo_enum)(
      MyHostIntegrationCoreApi* object, MyAnEnum an_enum,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_echo_nullable_bool)(
      MyHostIntegrationCoreApi* object, gboolean a_bool,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_echo_nullable_int)(
      MyHostIntegrationCoreApi* object, int64_t an_int,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_echo_nullable_double)(
      MyHostIntegrationCoreApi* object, double a_double,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_echo_nullable_string)(
      MyHostIntegrationCoreApi* object, const gchar* a_string,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_echo_nullable_uint8_list)(
      MyHostIntegrationCoreApi* object, const uint8_t* a_list,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_echo_nullable_list)(
      MyHostIntegrationCoreApi* object, FlValue* a_list,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_echo_nullable_map)(
      MyHostIntegrationCoreApi* object, FlValue* a_map,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
  void (*call_flutter_echo_nullable_enum)(
      MyHostIntegrationCoreApi* object, MyAnEnum an_enum,
      FlBasicMessageChannelResponseHandle* response_handle, gpointer user_data);
} MyHostIntegrationCoreApiVTable;

MyHostIntegrationCoreApi* my_host_integration_core_api_new(
    FlBinaryMessenger* messenger, const MyHostIntegrationCoreApiVTable* vtable,
    gpointer user_data, GDestroyNotify user_data_free_func);

void my_host_integration_core_api_respond_noop_async(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, void return_value);

void my_host_integration_core_api_respond_error_noop_async(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_echo_async_int(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, int64_t return_value);

void my_host_integration_core_api_respond_error_echo_async_int(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_echo_async_double(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, double return_value);

void my_host_integration_core_api_respond_error_echo_async_double(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_echo_async_bool(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    gboolean return_value);

void my_host_integration_core_api_respond_error_echo_async_bool(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_echo_async_string(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    const gchar* return_value);

void my_host_integration_core_api_respond_error_echo_async_string(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_echo_async_uint8_list(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    const uint8_t* return_value);

void my_host_integration_core_api_respond_error_echo_async_uint8_list(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_echo_async_object(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    FlValue* return_value);

void my_host_integration_core_api_respond_error_echo_async_object(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_echo_async_list(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    FlValue* return_value);

void my_host_integration_core_api_respond_error_echo_async_list(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_echo_async_map(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    FlValue* return_value);

void my_host_integration_core_api_respond_error_echo_async_map(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_echo_async_enum(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    MyAnEnum return_value);

void my_host_integration_core_api_respond_error_echo_async_enum(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_throw_async_error(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    FlValue* return_value);

void my_host_integration_core_api_respond_error_throw_async_error(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_throw_async_error_from_void(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, void return_value);

void my_host_integration_core_api_respond_error_throw_async_error_from_void(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_throw_async_flutter_error(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    FlValue* return_value);

void my_host_integration_core_api_respond_error_throw_async_flutter_error(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_echo_async_all_types(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    MyAllTypes* return_value);

void my_host_integration_core_api_respond_error_echo_async_all_types(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_echo_async_nullable_all_nullable_types(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    MyAllNullableTypes* return_value);

void my_host_integration_core_api_respond_error_echo_async_nullable_all_nullable_types(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_echo_async_nullable_int(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, int64_t return_value);

void my_host_integration_core_api_respond_error_echo_async_nullable_int(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_echo_async_nullable_double(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, double return_value);

void my_host_integration_core_api_respond_error_echo_async_nullable_double(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_echo_async_nullable_bool(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    gboolean return_value);

void my_host_integration_core_api_respond_error_echo_async_nullable_bool(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_echo_async_nullable_string(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    const gchar* return_value);

void my_host_integration_core_api_respond_error_echo_async_nullable_string(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_echo_async_nullable_uint8_list(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    const uint8_t* return_value);

void my_host_integration_core_api_respond_error_echo_async_nullable_uint8_list(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_echo_async_nullable_object(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    FlValue* return_value);

void my_host_integration_core_api_respond_error_echo_async_nullable_object(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_echo_async_nullable_list(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    FlValue* return_value);

void my_host_integration_core_api_respond_error_echo_async_nullable_list(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_echo_async_nullable_map(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    FlValue* return_value);

void my_host_integration_core_api_respond_error_echo_async_nullable_map(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_echo_async_nullable_enum(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    MyAnEnum return_value);

void my_host_integration_core_api_respond_error_echo_async_nullable_enum(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_noop(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, void return_value);

void my_host_integration_core_api_respond_error_call_flutter_noop(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_throw_error(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    FlValue* return_value);

void my_host_integration_core_api_respond_error_call_flutter_throw_error(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_throw_error_from_void(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, void return_value);

void my_host_integration_core_api_respond_error_call_flutter_throw_error_from_void(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_echo_all_types(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    MyAllTypes* return_value);

void my_host_integration_core_api_respond_error_call_flutter_echo_all_types(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_echo_all_nullable_types(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    MyAllNullableTypes* return_value);

void my_host_integration_core_api_respond_error_call_flutter_echo_all_nullable_types(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_send_multiple_nullable_types(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    MyAllNullableTypes* return_value);

void my_host_integration_core_api_respond_error_call_flutter_send_multiple_nullable_types(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_echo_bool(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    gboolean return_value);

void my_host_integration_core_api_respond_error_call_flutter_echo_bool(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_echo_int(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, int64_t return_value);

void my_host_integration_core_api_respond_error_call_flutter_echo_int(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_echo_double(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, double return_value);

void my_host_integration_core_api_respond_error_call_flutter_echo_double(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_echo_string(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    const gchar* return_value);

void my_host_integration_core_api_respond_error_call_flutter_echo_string(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_echo_uint8_list(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    const uint8_t* return_value);

void my_host_integration_core_api_respond_error_call_flutter_echo_uint8_list(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_echo_list(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    FlValue* return_value);

void my_host_integration_core_api_respond_error_call_flutter_echo_list(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_echo_map(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    FlValue* return_value);

void my_host_integration_core_api_respond_error_call_flutter_echo_map(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_echo_enum(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    MyAnEnum return_value);

void my_host_integration_core_api_respond_error_call_flutter_echo_enum(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_echo_nullable_bool(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    gboolean return_value);

void my_host_integration_core_api_respond_error_call_flutter_echo_nullable_bool(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_echo_nullable_int(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, int64_t return_value);

void my_host_integration_core_api_respond_error_call_flutter_echo_nullable_int(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_echo_nullable_double(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, double return_value);

void my_host_integration_core_api_respond_error_call_flutter_echo_nullable_double(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_echo_nullable_string(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    const gchar* return_value);

void my_host_integration_core_api_respond_error_call_flutter_echo_nullable_string(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_echo_nullable_uint8_list(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    const uint8_t* return_value);

void my_host_integration_core_api_respond_error_call_flutter_echo_nullable_uint8_list(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_echo_nullable_list(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    FlValue* return_value);

void my_host_integration_core_api_respond_error_call_flutter_echo_nullable_list(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_echo_nullable_map(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    FlValue* return_value);

void my_host_integration_core_api_respond_error_call_flutter_echo_nullable_map(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

void my_host_integration_core_api_respond_call_flutter_echo_nullable_enum(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle,
    MyAnEnum return_value);

void my_host_integration_core_api_respond_error_call_flutter_echo_nullable_enum(
    MyHostIntegrationCoreApi* self,
    FlBasicMessageChannelResponseHandle* response_handle, const gchar* code,
    const gchar* message, FlValue* details);

// The core interface that the Dart platform_test code implements for host
// integration tests to call into.
G_DECLARE_FINAL_TYPE(MyFlutterIntegrationCoreApi,
                     my_flutter_integration_core_api, MY,
                     FLUTTER_INTEGRATION_CORE_API, GObject)

MyFlutterIntegrationCoreApi* my_flutter_integration_core_api_new(
    FlBinaryMessenger* messenger);

// A no-op function taking no arguments and returning no value, to sanity
// test basic calling.
void my_flutter_integration_core_api_noop_async(
    MyFlutterIntegrationCoreApi* object, GCancellable* cancellable,
    GAsyncReadyCallback callback, gpointer user_data);

gboolean my_flutter_integration_core_api_noop_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result, GError** error);

// Responds with an error from an async function returning a value.
void my_flutter_integration_core_api_throw_error_async(
    MyFlutterIntegrationCoreApi* object, GCancellable* cancellable,
    GAsyncReadyCallback callback, gpointer user_data);

gboolean my_flutter_integration_core_api_throw_error_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result,
    FlValue** return_value, GError** error);

// Responds with an error from an async void function.
void my_flutter_integration_core_api_throw_error_from_void_async(
    MyFlutterIntegrationCoreApi* object, GCancellable* cancellable,
    GAsyncReadyCallback callback, gpointer user_data);

gboolean my_flutter_integration_core_api_throw_error_from_void_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result, GError** error);

// Returns the passed object, to test serialization and deserialization.
void my_flutter_integration_core_api_echo_all_types_async(
    MyFlutterIntegrationCoreApi* object, MyAllTypes* everything,
    GCancellable* cancellable, GAsyncReadyCallback callback,
    gpointer user_data);

gboolean my_flutter_integration_core_api_echo_all_types_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result,
    MyAllTypes** return_value, GError** error);

// Returns the passed object, to test serialization and deserialization.
void my_flutter_integration_core_api_echo_all_nullable_types_async(
    MyFlutterIntegrationCoreApi* object, MyAllNullableTypes* everything,
    GCancellable* cancellable, GAsyncReadyCallback callback,
    gpointer user_data);

gboolean my_flutter_integration_core_api_echo_all_nullable_types_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result,
    MyAllNullableTypes** return_value, GError** error);

// Returns passed in arguments of multiple types.
//
// Tests multiple-arity FlutterApi handling.
void my_flutter_integration_core_api_send_multiple_nullable_types_async(
    MyFlutterIntegrationCoreApi* object, gboolean a_nullable_bool,
    int64_t a_nullable_int, const gchar* a_nullable_string,
    GCancellable* cancellable, GAsyncReadyCallback callback,
    gpointer user_data);

gboolean my_flutter_integration_core_api_send_multiple_nullable_types_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result,
    MyAllNullableTypes** return_value, GError** error);

// Returns the passed boolean, to test serialization and deserialization.
void my_flutter_integration_core_api_echo_bool_async(
    MyFlutterIntegrationCoreApi* object, gboolean a_bool,
    GCancellable* cancellable, GAsyncReadyCallback callback,
    gpointer user_data);

gboolean my_flutter_integration_core_api_echo_bool_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result,
    gboolean* return_value, GError** error);

// Returns the passed int, to test serialization and deserialization.
void my_flutter_integration_core_api_echo_int_async(
    MyFlutterIntegrationCoreApi* object, int64_t an_int,
    GCancellable* cancellable, GAsyncReadyCallback callback,
    gpointer user_data);

gboolean my_flutter_integration_core_api_echo_int_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result,
    int64_t* return_value, GError** error);

// Returns the passed double, to test serialization and deserialization.
void my_flutter_integration_core_api_echo_double_async(
    MyFlutterIntegrationCoreApi* object, double a_double,
    GCancellable* cancellable, GAsyncReadyCallback callback,
    gpointer user_data);

gboolean my_flutter_integration_core_api_echo_double_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result,
    double* return_value, GError** error);

// Returns the passed string, to test serialization and deserialization.
void my_flutter_integration_core_api_echo_string_async(
    MyFlutterIntegrationCoreApi* object, const gchar* a_string,
    GCancellable* cancellable, GAsyncReadyCallback callback,
    gpointer user_data);

gboolean my_flutter_integration_core_api_echo_string_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result,
    gchar** return_value, GError** error);

// Returns the passed byte list, to test serialization and deserialization.
void my_flutter_integration_core_api_echo_uint8_list_async(
    MyFlutterIntegrationCoreApi* object, const uint8_t* a_list,
    GCancellable* cancellable, GAsyncReadyCallback callback,
    gpointer user_data);

gboolean my_flutter_integration_core_api_echo_uint8_list_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result,
    uint8_t** return_value, GError** error);

// Returns the passed list, to test serialization and deserialization.
void my_flutter_integration_core_api_echo_list_async(
    MyFlutterIntegrationCoreApi* object, FlValue* a_list,
    GCancellable* cancellable, GAsyncReadyCallback callback,
    gpointer user_data);

gboolean my_flutter_integration_core_api_echo_list_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result,
    FlValue** return_value, GError** error);

// Returns the passed map, to test serialization and deserialization.
void my_flutter_integration_core_api_echo_map_async(
    MyFlutterIntegrationCoreApi* object, FlValue* a_map,
    GCancellable* cancellable, GAsyncReadyCallback callback,
    gpointer user_data);

gboolean my_flutter_integration_core_api_echo_map_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result,
    FlValue** return_value, GError** error);

// Returns the passed enum to test serialization and deserialization.
void my_flutter_integration_core_api_echo_enum_async(
    MyFlutterIntegrationCoreApi* object, MyAnEnum an_enum,
    GCancellable* cancellable, GAsyncReadyCallback callback,
    gpointer user_data);

gboolean my_flutter_integration_core_api_echo_enum_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result,
    MyAnEnum* return_value, GError** error);

// Returns the passed boolean, to test serialization and deserialization.
void my_flutter_integration_core_api_echo_nullable_bool_async(
    MyFlutterIntegrationCoreApi* object, gboolean a_bool,
    GCancellable* cancellable, GAsyncReadyCallback callback,
    gpointer user_data);

gboolean my_flutter_integration_core_api_echo_nullable_bool_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result,
    gboolean* return_value, GError** error);

// Returns the passed int, to test serialization and deserialization.
void my_flutter_integration_core_api_echo_nullable_int_async(
    MyFlutterIntegrationCoreApi* object, int64_t an_int,
    GCancellable* cancellable, GAsyncReadyCallback callback,
    gpointer user_data);

gboolean my_flutter_integration_core_api_echo_nullable_int_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result,
    int64_t* return_value, GError** error);

// Returns the passed double, to test serialization and deserialization.
void my_flutter_integration_core_api_echo_nullable_double_async(
    MyFlutterIntegrationCoreApi* object, double a_double,
    GCancellable* cancellable, GAsyncReadyCallback callback,
    gpointer user_data);

gboolean my_flutter_integration_core_api_echo_nullable_double_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result,
    double* return_value, GError** error);

// Returns the passed string, to test serialization and deserialization.
void my_flutter_integration_core_api_echo_nullable_string_async(
    MyFlutterIntegrationCoreApi* object, const gchar* a_string,
    GCancellable* cancellable, GAsyncReadyCallback callback,
    gpointer user_data);

gboolean my_flutter_integration_core_api_echo_nullable_string_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result,
    gchar** return_value, GError** error);

// Returns the passed byte list, to test serialization and deserialization.
void my_flutter_integration_core_api_echo_nullable_uint8_list_async(
    MyFlutterIntegrationCoreApi* object, const uint8_t* a_list,
    GCancellable* cancellable, GAsyncReadyCallback callback,
    gpointer user_data);

gboolean my_flutter_integration_core_api_echo_nullable_uint8_list_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result,
    uint8_t** return_value, GError** error);

// Returns the passed list, to test serialization and deserialization.
void my_flutter_integration_core_api_echo_nullable_list_async(
    MyFlutterIntegrationCoreApi* object, FlValue* a_list,
    GCancellable* cancellable, GAsyncReadyCallback callback,
    gpointer user_data);

gboolean my_flutter_integration_core_api_echo_nullable_list_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result,
    FlValue** return_value, GError** error);

// Returns the passed map, to test serialization and deserialization.
void my_flutter_integration_core_api_echo_nullable_map_async(
    MyFlutterIntegrationCoreApi* object, FlValue* a_map,
    GCancellable* cancellable, GAsyncReadyCallback callback,
    gpointer user_data);

gboolean my_flutter_integration_core_api_echo_nullable_map_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result,
    FlValue** return_value, GError** error);

// Returns the passed enum to test serialization and deserialization.
void my_flutter_integration_core_api_echo_nullable_enum_async(
    MyFlutterIntegrationCoreApi* object, MyAnEnum an_enum,
    GCancellable* cancellable, GAsyncReadyCallback callback,
    gpointer user_data);

gboolean my_flutter_integration_core_api_echo_nullable_enum_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result,
    MyAnEnum* return_value, GError** error);

// A no-op function taking no arguments and returning no value, to sanity
// test basic asynchronous calling.
void my_flutter_integration_core_api_noop_async_async(
    MyFlutterIntegrationCoreApi* object, GCancellable* cancellable,
    GAsyncReadyCallback callback, gpointer user_data);

gboolean my_flutter_integration_core_api_noop_async_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result, GError** error);

// Returns the passed in generic Object asynchronously.
void my_flutter_integration_core_api_echo_async_string_async(
    MyFlutterIntegrationCoreApi* object, const gchar* a_string,
    GCancellable* cancellable, GAsyncReadyCallback callback,
    gpointer user_data);

gboolean my_flutter_integration_core_api_echo_async_string_finish(
    MyFlutterIntegrationCoreApi* object, GAsyncResult* result,
    gchar** return_value, GError** error);

G_DECLARE_FINAL_TYPE(MyHostTrivialApiNoopResponse,
                     my_host_trivial_api_noop_response, MY,
                     HOST_TRIVIAL_API_NOOP_RESPONSE, GObject)

MyHostTrivialApiNoopResponse* my_host_trivial_api_noop_response_new(
    void return_value);

MyHostTrivialApiNoopResponse* my_host_trivial_api_noop_response_new_error(
    const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(MyHostTrivialApi, my_host_trivial_api, MY,
                     HOST_TRIVIAL_API, GObject)

typedef struct {
  MyHostTrivialApiNoopResponse* (*noop)(MyHostTrivialApi* object,
                                        gpointer user_data);
} MyHostTrivialApiVTable;

MyHostTrivialApi* my_host_trivial_api_new(FlBinaryMessenger* messenger,
                                          const MyHostTrivialApiVTable* vtable,
                                          gpointer user_data,
                                          GDestroyNotify user_data_free_func);

G_DECLARE_FINAL_TYPE(MyHostSmallApi, my_host_small_api, MY, HOST_SMALL_API,
                     GObject)

typedef struct {
  void (*echo)(MyHostSmallApi* object, const gchar* a_string,
               FlBasicMessageChannelResponseHandle* response_handle,
               gpointer user_data);
  void (*void_void)(MyHostSmallApi* object,
                    FlBasicMessageChannelResponseHandle* response_handle,
                    gpointer user_data);
} MyHostSmallApiVTable;

MyHostSmallApi* my_host_small_api_new(FlBinaryMessenger* messenger,
                                      const MyHostSmallApiVTable* vtable,
                                      gpointer user_data,
                                      GDestroyNotify user_data_free_func);

void my_host_small_api_respond_echo(
    MyHostSmallApi* self, FlBasicMessageChannelResponseHandle* response_handle,
    const gchar* return_value);

void my_host_small_api_respond_error_echo(
    MyHostSmallApi* self, FlBasicMessageChannelResponseHandle* response_handle,
    const gchar* code, const gchar* message, FlValue* details);

void my_host_small_api_respond_void_void(
    MyHostSmallApi* self, FlBasicMessageChannelResponseHandle* response_handle,
    void return_value);

void my_host_small_api_respond_error_void_void(
    MyHostSmallApi* self, FlBasicMessageChannelResponseHandle* response_handle,
    const gchar* code, const gchar* message, FlValue* details);

// A simple API called in some unit tests.
G_DECLARE_FINAL_TYPE(MyFlutterSmallApi, my_flutter_small_api, MY,
                     FLUTTER_SMALL_API, GObject)

MyFlutterSmallApi* my_flutter_small_api_new(FlBinaryMessenger* messenger);

void my_flutter_small_api_echo_wrapped_list_async(MyFlutterSmallApi* object,
                                                  MyTestMessage* msg,
                                                  GCancellable* cancellable,
                                                  GAsyncReadyCallback callback,
                                                  gpointer user_data);

gboolean my_flutter_small_api_echo_wrapped_list_finish(
    MyFlutterSmallApi* object, GAsyncResult* result,
    MyTestMessage** return_value, GError** error);

void my_flutter_small_api_echo_string_async(MyFlutterSmallApi* object,
                                            const gchar* a_string,
                                            GCancellable* cancellable,
                                            GAsyncReadyCallback callback,
                                            gpointer user_data);

gboolean my_flutter_small_api_echo_string_finish(MyFlutterSmallApi* object,
                                                 GAsyncResult* result,
                                                 gchar** return_value,
                                                 GError** error);

G_END_DECLS

#endif  // PIGEON_CORE_TESTS_GEN_H_
